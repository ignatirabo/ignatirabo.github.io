<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Ignacio</title>
 <link href="http://hyde.getpoole.com/atom.xml" rel="self"/>
 <link href="http://hyde.getpoole.com/"/>
 <updated>2017-11-25T21:13:46-03:00</updated>
 <id>http://hyde.getpoole.com</id>
 <author>
   <name>Mark Otto</name>
   <email></email>
 </author>

 
 <entry>
   <title>Installing Coq for Spacemacs</title>
   <link href="http://hyde.getpoole.com/misc/2017/11/25/coq-in-spacemacs/"/>
   <updated>2017-11-25T20:47:00-03:00</updated>
   <id>http://hyde.getpoole.com/misc/2017/11/25/coq-in-spacemacs</id>
   <content type="html">&lt;p&gt;I had a very hard time getting Coq to work as expected on Spacemacs. I collected everything I found and made this little tutorial.&lt;/p&gt;

&lt;p&gt;First of all we need to install &lt;strong&gt;Coq&lt;/strong&gt;, though &lt;strong&gt;Opam&lt;/strong&gt;. Debian-based users can do this with &lt;code&gt;apt-get&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install opam 
opam install coq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The next step is getting &lt;strong&gt;Proof General&lt;/strong&gt;. &lt;a href=&quot;https://proofgeneral.github.io/&quot;&gt;Proof General&lt;/a&gt; is a generic front-end for &lt;em&gt;proof assistants&lt;/em&gt; based on Emacs.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/ProofGeneral/PG ~/.emacs.d/lisp/PG
cd ~/.emacs.d/lisp/PG
make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The next step is installing &lt;strong&gt;company-coq&lt;/strong&gt; with &lt;strong&gt;MELPA&lt;/strong&gt;. Luckily, MELPA comes with the default Spacemacs installation. Just use &lt;code&gt;M-x package-refresh-contents RET&lt;/code&gt; followed by &lt;code&gt;M-x package-install RET company-coq RET&lt;/code&gt; to install and byte-compile company-coq and its dependencies (some of them will produce a few warnings; that’s OK).&lt;/p&gt;

&lt;p&gt;Next, we have to download a &lt;a href=&quot;https://github.com/olivierverdier/spacemacs-coq&quot;&gt;Coq layer&lt;/a&gt; for Spacemacs. This will provide all the keybindings and configurations we need to start working.&lt;/p&gt;

&lt;p&gt;Before dowloading the layer we need to change the &lt;code&gt;dotspacemacs-configuration-layer-path&lt;/code&gt; in our &lt;code&gt;.spacemacs&lt;/code&gt; dotfile. Find that line and change it like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dotspacemacs-configuration-layer-path '(&quot;~/.spacemacs.d/&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This informs Spacemacs that we will keep our configuration layers in this folder, so then Spacemacs knows how to reach them. Now we need to create the directory and clone the layer.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
mkdir ~/.spacemacs.d
mkdir ~/.spacemacs.d/layers
cd ~/.spacemacs.d/layers
git clone https://github.com/olivierverdier/spacemacs-coq.git
mv spacemacs-coq coq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We’re almost finished. Let’s go to the location of the layer we’ve just downloaded and open &lt;code&gt;config.el&lt;/code&gt;. We need to change the &lt;code&gt;proof-general-path&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(defvar proof-general-path &quot;/home/yourname/.emacs.d/lisp/PG/generic/proof-site&quot;
  &quot;The path to proof general&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The thing is that this solution is unique to each user, you need to adapt the path to your own setup.&lt;/p&gt;

&lt;p&gt;Finally, the last step (totally optional) will serve &lt;strong&gt;Evil&lt;/strong&gt; users. If this is not configured, everytime you hit &lt;code&gt;&amp;lt;ESC&amp;gt;&lt;/code&gt;, Emacs will autocomplete the current line.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(setq evil-want-abbrev-expand-on-insert-exit nil)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should be added before Evil loads, that means, before &lt;code&gt;dotspacemacs/user-init&lt;/code&gt; in your &lt;code&gt;.spacemacs&lt;/code&gt; file. This was found &lt;a href=&quot;https://github.com/syl20bnr/spacemacs/issues/8853&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

</content>
 </entry>
 

</feed>
